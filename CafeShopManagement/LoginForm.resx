<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>